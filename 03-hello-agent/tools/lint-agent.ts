#!/usr/bin/env node

//Auto generated by AI, do not edit manually.


console.log('🚀 Starting Linting Agent...\n');

console.log('🤖 Hello! I\'m your Linting Agent.');
console.log('I can help you keep your code clean and consistent.');
console.log('Running analysis on your TypeScript files...\n');

// Import modules
import { execSync } from 'child_process';
import { readFileSync } from 'fs';

try {
  // Show project info
  const packageJson = JSON.parse(readFileSync('package.json', 'utf8'));
  console.log(`📦 Project: ${packageJson.name} v${packageJson.version}\n`);

  // Run linting
  console.log('🔍 Running ESLint analysis...');

  try {
    const output = execSync('npm run lint', {
      encoding: 'utf8',
      stdio: ['pipe', 'pipe', 'pipe']
    });

    if (output && output.trim()) {
      console.log(output);
      console.log('⚠️  Found some issues that need attention.');
    } else {
      console.log('✅ No linting issues found! Code looks great.');
    }

  } catch (lintError: any) {
    if (lintError.stdout && lintError.stdout.trim()) {
      console.log(lintError.stdout);
      console.log('⚠️  Found some linting issues.');

      // Try auto-fix
      console.log('\n🔧 Attempting to auto-fix issues...');
      try {
        execSync('npm run lint:fix', {
          encoding: 'utf8',
          stdio: ['pipe', 'pipe', 'pipe']
        });
        console.log('✅ Auto-fix completed!');
      } catch (fixError) {
        console.log('Some issues could not be auto-fixed.');
      }

    } else {
      console.log('✅ No linting issues found! Code looks great.');
    }
  }

} catch (error: any) {
  console.error('❌ Agent error:', error.message);
}

console.log('\n📊 Linting analysis complete!');
console.log('💡 Tip: Run me anytime with `npm run agent`');